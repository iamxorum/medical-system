digraph "src" {

splines  = ortho;
fontname = "Inconsolata";

node [colorscheme = ylgnbu4];
edge [colorscheme = dark28, dir = both];

Appointment            [shape = record, label = "{ Appointment | + Appointment(String, MedicalStaff, Client, String, String, String) : \l|- client : Client\l - description : String\l - ID : String\l - time : String\l - medicalStaff : MedicalStaff\l - date : String\l|+ printInfo() : void\l + toString() : String\l + equals(Object) : boolean\l + hashCode() : int\l| description : String\l  medicalStaff : MedicalStaff\l  date : String\l  time : String\l  client : Client\l  ID : String\l }"];
AuditingService        [shape = record, label = "{ \<\<interface\>\>\nAuditingService | + logInsertNurse(String, String, String, int) : void\l + logInsertClient(String, String, int, String) : void\l + logSaveDataAction() : void\l + logInsertDoctor(String, String, String) : void\l + logLoadDataAction() : void\l + logCompletedAppointment(Appointment, double) : void\l + logClientRecordUpdate(Client) : void\l + logDeleteAppointment(Appointment) : void\l + logDeleteStaff(MedicalStaff) : void\l + logPayment(Client, double) : void\l + logInsertDoctor(String, String, String, List\<String\>) : void\l + logLoadDataActionAtStart() : void\l + logDeleteClient(Client) : void\l + logInsertAppointment(Appointment, MedicalStaff, Client, String, String) : void\l }"];
Bank                   [shape = record, label = "{ Bank | - Bank() : \l|- instance : Bank\l - bank : double\l|+ bankAmount(double) : void\l| bank : double\l  instance : Bank\l }"];
Client                 [shape = record, label = "{ Client | + Client() : \l + Client(String, String, int, String, double) : \l|- name : String\l - age : int\l - ID : String\l - debt : double\l - diagnosis : String\l|+ hashCode() : int\l + toString() : String\l + equals(Object) : boolean\l| name : String\l  age : int\l  debt : double\l  ID : String\l  diagnosis : String\l }"];
Colors                 [shape = record, label = "{ \<\<enumeration\>\>\nColors | - Colors(String) : \l|+ toString() : String\l + values() : Colors[]\l + valueOf(String) : Colors\l }"];
CsvAuditingService     [shape = record, label = "{ CsvAuditingService | - CsvAuditingService() : \l|- instance : CsvAuditingService\l|+ logClientRecordUpdate(Client) : void\l + logLoadDataAction() : void\l + logInsertDoctor(String, String, String) : void\l + logInsertAppointment(Appointment, MedicalStaff, Client, String, String) : void\l + logInsertNurse(String, String, String, int) : void\l + logDeleteStaff(MedicalStaff) : void\l + logCompletedAppointment(Appointment, double) : void\l + logInsertDoctor(String, String, String, List\<String\>) : void\l + logInsertClient(String, String, int, String) : void\l + logPayment(Client, double) : void\l + logDeleteAppointment(Appointment) : void\l - writeLineToFile(String) : void\l + logLoadDataActionAtStart() : void\l + logSaveDataAction() : void\l + logDeleteClient(Client) : void\l| instance : CsvAuditingService\l }"];
Doctor                 [shape = record, label = "{ Doctor | + Doctor() : \l + Doctor(String, String, String, List\<String\>) : \l + Doctor(String, String, String) : \l|- specialties : List\<String\>\l|+ toString() : String\l + printInfo() : void\l| specialties : List\<String\>\l }"];
InputOutput            [shape = record, label = "{ InputOutput | - InputOutput(Bank, MedicalOfficeService, Vector\<Doctor\>, Vector\<Nurse\>, Vector\<Client\>, Vector\<Appointment\>, Map\<Client, MedicalRecord\>) : \l|- createCSVFile(String, String) : void\l - loadAppointmentData(MedicalOfficeService, Vector\<Doctor\>, Vector\<Client\>, Vector\<Appointment\>) : void\l + saveData(Bank, Vector\<Doctor\>, Vector\<Nurse\>, Vector\<Client\>, Vector\<Appointment\>, Map\<Client, MedicalRecord\>) : void\l + loadData(Bank, MedicalOfficeService, Vector\<Doctor\>, Vector\<Nurse\>, Vector\<Client\>, Vector\<Appointment\>, Map\<Client, MedicalRecord\>) : void\l - createCSVFile(String, String, List\<String\>) : void\l + readCSVFileMedication(String, String) : List\<Medicine\>\l + saveMedicalRecords(Map\<Client, MedicalRecord\>) : void\l - loadRecordFromCSV(Client) : MedicalRecord?\l - saveMedicalStaffData(Vector\<Doctor\>, Vector\<Nurse\>) : void\l - saveAppointmentData(Vector\<Appointment\>) : void\l - loadBankData(Bank) : void\l + createRecordFolder(String, MedicalRecord) : void\l - readCSVFile(String, String) : List\<String\>\l + loadMedicalRecords(MedicalOfficeService, Map\<Client, MedicalRecord\>, Vector\<Client\>) : void\l - loadClientData(MedicalOfficeService, Vector\<Client\>) : void\l + getInstance(Bank, MedicalOfficeService, Vector\<Doctor\>, Vector\<Nurse\>, Vector\<Client\>, Vector\<Appointment\>, Map\<Client, MedicalRecord\>) : InputOutput\l - saveClientData(Vector\<Client\>) : void\l - loadMedicalStaffData(MedicalOfficeService, Vector\<Doctor\>, Vector\<Nurse\>) : void\l + createRecordFolder(String) : void\l - saveBankData(Bank) : void\l }"];
Medic                  [shape = record, label = "{ \<\<interface\>\>\nMedic | + printInfo() : void\l| name : String\l  speciality : MedicalStaffType\l  ID : String\l  contactInfo : String\l }"];
MedicalException       [shape = record, label = "{ MedicalException | + MedicalException(String) : \l }"];
MedicalOfficeMain      [shape = record, label = "{ MedicalOfficeMain | + MedicalOfficeMain() : \l|+ main(String[]) : void\l }"];
MedicalOfficeService   [shape = record, label = "{ MedicalOfficeService | - MedicalOfficeService() : \l|- instance : MedicalOfficeService\l|+ createAppointment(Vector\<Appointment\>, MedicalStaff, Client, String, String, String) : Appointment\l + printMedicalRecord(Client) : void\l + insertHistoryRecord(Client, String) : void\l + removeAppointment(Appointment) : void\l + isStaffAvailable(MedicalStaff, String, String) : boolean\l + addAppointment(Appointment) : void\l + printAllMedicalRecords() : void\l + getScheduleForStaff(MedicalStaff) : List\<Appointment\>\l + insertAllergyRecord(Client, String) : void\l + insertDoctor(Vector\<Doctor\>, String, String, List\<String\>) : void\l + removeClient(Client) : void\l + getClientByID(String) : Client\l + removeMedicalStaff(MedicalStaff) : void\l + getAppointmentByID(String) : Appointment\l + insertMedicationRecord(Client, Medicine) : void\l + insertNurse(Vector\<Nurse\>, String, String, int) : void\l + addClient(Client) : void\l + insertClient(Vector\<Client\>, String, String, int) : void\l + getMedicalStaffByID(String) : MedicalStaff\l + getStaffByName(String) : MedicalStaff\l + addMedicalStaff(MedicalStaff) : void\l + insertDoctor(Vector\<Doctor\>, String, String) : void\l + clearData() : void\l| allClients : List\<Client\>\l  instance : MedicalOfficeService\l  allMedicalStaff : List\<MedicalStaff\>\l  allAppointments : List\<Appointment\>\l  medicalRecords : Map\<Client, MedicalRecord\>\l }"];
MedicalOffice_GUI_Main [shape = record, label = "{ MedicalOffice_GUI_Main | + MedicalOffice_GUI_Main() : \l|+ createMenuBar(Bank, MedicalOfficeService, Vector\<Doctor\>, Vector\<Nurse\>, Vector\<Client\>, Vector\<Appointment\>, Map\<Client, MedicalRecord\>, InputOutput, CsvAuditingService) : JMenuBar\l + main(String[]) : void\l }"];
MedicalRecord          [shape = record, label = "{ MedicalRecord | + MedicalRecord() : \l|- medications : List\<Medicine\>\l - allergies : List\<String\>\l - medicalHistory : List\<String\>\l|+ toString() : String\l + equals(Object) : boolean\l + hashCode() : int\l| allergies : List\<String\>\l  medications : List\<Medicine\>\l  medicalHistory : List\<String\>\l }"];
MedicalStaff           [shape = record, label = "{ MedicalStaff | + MedicalStaff(String, String, MedicalStaffType, String) : \l|- speciality : MedicalStaffType\l - ID : String\l - contactInfo : String\l - name : String\l|+ toString() : String\l + hashCode() : int\l + equals(Object) : boolean\l| name : String\l  speciality : MedicalStaffType\l  ID : String\l  contactInfo : String\l }"];
MedicalStaffType       [shape = record, label = "{ \<\<enumeration\>\>\nMedicalStaffType | + MedicalStaffType() : \l|+ values() : MedicalStaffType[]\l + valueOf(String) : MedicalStaffType\l }"];
Medicine               [shape = record, label = "{ Medicine | + Medicine(String, int, String, String, String) : \l|- dosage : String\l - prescriptionFor : String\l - name : String\l - duration : String\l - year : int\l| name : String\l  duration : String\l  year : int\l  prescriptionFor : String\l  dosage : String\l }"];
Nurse                  [shape = record, label = "{ Nurse | + Nurse() : \l + Nurse(String, String, String, int) : \l|- experienceYears : int\l|+ printInfo() : void\l + toString() : String\l| experienceYears : int\l }"];
Paths                  [shape = record, label = "{ \<\<enumeration\>\>\nPaths | - Paths(String) : \l|+ values() : Paths[]\l + toString() : String\l + valueOf(String) : Paths\l }"];
Patient                [shape = record, label = "{ \<\<interface\>\>\nPatient | + printInfo() : void\l| name : String\l  age : int\l  debt : double\l  ID : String\l  diagnosis : String\l }"];

Client                 -> Patient                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
CsvAuditingService     -> AuditingService        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Doctor                 -> MedicalStaff           [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
MedicalStaff           -> Medic                  [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Nurse                  -> MedicalStaff           [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];

}
